- alias: 'shut off jarvis'
  initial_state: on
  trigger:
    platform: 'time'
    at: '21:00:00'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.jarvis_on
- alias: 'turn on jarvis'
  initial_state: on
  trigger:
    platform: 'time'
    at: '8:00:00'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.jarvis_on

- alias: 'Cooling Since'
  initial_state: on
  trigger:
      platform: numeric_state
      entity_id: sensor.wine_cooling_since
      above: 15
  action:
      service: notify.html_notifier
      data_template:
        title: "Wine Room Cooling"
        message: "Wine room has been cooling for {{ states.sensor.wine_cooling_since.state }} minutes."
- alias: 'Cooling Since 45'
  initial_state: on
  trigger:
      platform: numeric_state
      entity_id: sensor.wine_cooling_since
      above: 45
  action:
    - service: notify.html_notifier
      data_template:
        title: "Wine Room Cooling"
        message: "Wine room has been cooling for {{ states.sensor.wine_cooling_since.state }} minutes. Turning off."
    - service: climate.set_temperature
      data:
        entity_id: climate.fin_temps
        temperature: 70
        operation_mode: Heat
    - delay: 15:00
    - service: climate.set_temperature
      data:
        entity_id: climate.fin_temps
        temperature: 36
        operation_mode: Heat

- alias: 'Tesla Since'
  initial_state: on
  trigger:
      platform: numeric_state
      entity_id: sensor.tesla_lastupdate
      above: 900
  action:
      service: notify.html_notifier
      data_template:
        title: "Tesla Update Delay"
        message: "Tesla battery has not updated in 15 minutes"

- alias: 'Tesla Since 1hr'
  initial_state: on
  trigger:
      platform: numeric_state
      entity_id: sensor.tesla_lastupdate
      above: 3600
  action:
      service: notify.html_notifier
      data_template:
        title: "Tesla Update Delay"
        message: "Tesla battery has not updated in 1 hour"

- alias: 'PiZero Off'
  initial_state: on
  trigger:
      platform: state
      entity_id: binary_sensor.ping_binary_sensor
      to: 'off'
      for:
        minutes: 1
  action:
      service: notify.html_notifier
      data_template:
        title: "Pizero1"
        message: "Pizero1 is offline."

- alias: 'Wine Off'
  initial_state: on
  trigger:
      platform: state
      entity_id: binary_sensor.wine_connected
      to: 'off'
      for:
        minutes: 1
  action:
      service: notify.html_notifier
      data_template:
        title: "Wine Room"
        message: "Wine room is not connected."

- alias: 'Back Door Open'
  trigger:
      platform: state
      entity_id: binary_sensor.back_door
      to: 'on'
      for:
        minutes: 5
  action:
      service: notify.html_notifier
      data_template:
        title: "Back Door Open"
        message: "Back Door has been open for a while"

- alias: 'Front Door Open'
  initial_state: on
  trigger:
      platform: state
      entity_id: binary_sensor.front_door
      to: 'on'
      for:
        minutes: 3
  action:
    - service: notify.html_notifier
      data_template:
        title: "Front Door Open"
        message: "Front Door has been open for a while"
    - service: script.tts_say
      data:
        msg: "The front door is open.  If you don't know now you know."

- alias: 'Battery Level'
  trigger:
      platform: numeric_state
      entity_id: sensor.zwave_front_door_battery
      below: 30
  action:
      service: notify.html_notifier
      data_template:
        title: "Front Door Battery Low"
        message: "Front Door Battery Low"

#- alias: 'Switch Timer'
#  trigger:
#    platform: time
#    at: "15:00:00"
#  action:
#    - service: switch.turn_on
#      entity_id: switch.my_smart_plug
#    - service: script.tts_say
#      data:
#        msg: "Merry Christmas Apaps"

#- alias: 'Switch Timer Off'
#  trigger:
#    platform: time
#    at: "22:00:00"
#  action:
#    - service: switch.turn_off
#      entity_id: switch.my_smart_plug

### DRYER State ###########
- alias: 'Dryer State - Drying'
  initial_state: on
  trigger:
    platform: numeric_state
    entity_id: sensor.dryer_watts
    above: 50
    for:
      seconds: 10
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/dryer
        payload: 'Drying'
        retain: 'true'
    - service: notify.loginfo
      data_template:
        message: "Dryer set to drying"
- alias: 'Dryer State - Idle'
  initial_state: on
  trigger:
    platform: numeric_state
    entity_id: sensor.dryer_watts
    below: 6
    for:
      seconds: 5
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/dryer
        payload: 'Idle'
        retain: 'true'
#### WASHER STATE ##########
- alias: 'Washer State - Start'
  initial_state: on
  trigger:
    platform: numeric_state
    entity_id: sensor.washer_watts
    above: 5
    for:
      seconds: 10
  condition:
    condition: template
    value_template: "{{ states.sensor.washer_state.state != 'Washing' }}"
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/washer
        payload: 'Washing'
        retain: 'true'
    - service: notify.loginfo
      data_template:
        message: "Washer set to washing"
- alias: 'Washer State - Idle'
  initial_state: on
  trigger:
    platform: numeric_state
    entity_id: sensor.washer_watts
    below: 5
    for:
      minutes: 5
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/washer
        payload: 'Idle'
        retain: 'true'
############# Announcements ######
- alias: 'Dryer Finished'
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.dryer_state
    from: 'Drying'
    to: 'Idle'
  action:
    - service: script.tts_say
      data:
        msg: "The Dryer is done.  The clothes are ready for whenever you would like."
- alias: 'Washer Finished'
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.washer_state
    from: 'Washing'
    to: 'Idle'
#  condition:
#    condition: template
#    value_template: "{{ states.sensor.dryer_state.state != 'Drying' }}"
  action:
    - service: script.tts_say
      data:
        msg: "The wash is done and are ready at convenience."

##PORCH
- alias: porch on
  trigger:
    platform: sun
    event: sunset
    offset: "-00:45:00"
  action:
    service: homeassistant.turn_on
    entity_id: switch.leviton_vrs151lz_binary_scene_switch_switch
- alias: porch off
  trigger:
    platform: sun
    event: sunrise
    offset: "-00:45:00"
  action:
    service: homeassistant.turn_off
    entity_id: switch.leviton_vrs151lz_binary_scene_switch_switch
